name: H2020 CORDIS data import

on:
  push:
    paths:
      - .github/workflows/h2020.yml
  workflow_dispatch: #empty for now
  schedule:
    - cron: '30 5 * * 1'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: |-
          pip install pandas csvkit
          sudo apt install gawk
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Extract
        run: |-
          curl -o h2020_data.zip https://cordis.europa.eu/data/cordis-h2020projects-csv.zip
          unzip h2020_data.zip
          mv csv/project.csv h2020_projects.csv
          mv csv/organization.csv h2020_organizations.csv
          mv csv/topics.csv h2020_topics.csv
          mv csv/legalBasis.csv h2020_legalBasis.csv
          mv csv/euroSciVoc.csv h2020_euroSciVoc.csv
      - name: Transform - Format Date
        # - clean bad formatted lines with csvclean, this produces {filename}_out.csv and {filename}_err.csv
        # - find column headings containing "Date"
        # - format dates in those columns
        run: |-
          ./h2020_convert_data.sh
      - name: Transform - projects - slice new entries
         # - therefore slice csv to contain only lately updated records
         # - last run is assumed one week ago
         # - contentUpdateDate is the column we want to compare
        run: |-
          CSVFILE=h2020_projects_out_formatted.csv
          LATEST=${CSVFILE:0:-4}_latest.csv
          LASTRUN=$(date -I -d "- 3 months")
          CONTENTUPDATE=$(csvcut -n -d "," $CSVFILE | awk '$2 ~ /(contentUpdateDate)/ {print($1)}' | sed -e 's/\://' | awk '{print $0+1}')
           gawk -F ',' -v CUD="$CONTENTUPDATE" -v LR="$LASTRUN" -f h2020_latest_filter.awk $CSVFILE > $LATEST
          echo "The the count of rows that are not matching the expected column order:"
          wc -l error_rows.txt
      - name: Transform - organizations - slice new entries
         # - therefore slice csv to contain only lately updated records
         # - last run is assumed one week ago
         # - contentUpdateDate is the column we want to compare
        run: |-
          CSVFILE=h2020_organizations_out_formatted.csv
          LATEST=${CSVFILE:0:-4}_latest.csv
          LASTRUN=$(date -I -d "- 3 months")
          CONTENTUPDATE=$(csvcut -n -d "," $CSVFILE | awk '$2 ~ /(contentUpdateDate)/ {print($1)}' | sed -e 's/\://' | awk '{print $0+1}')
          gawk -F ',' -v CUD="$CONTENTUPDATE" -v LR="$LASTRUN" -f h2020_latest_filter.awk $CSVFILE > $LATEST
          echo "The count of rows that are not matching the expected column order:"
          wc -l error_rows.txt
      - name: Commit and push if something has changed
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add h2020_projects_out_formatted.csv h2020_projects_out_formatted_latest.csv h2020_organizations_out_formatted.csv h2020_organizations_out_formatted_latest.csv h2020_euroSciVoc_out.csv h2020_legalBasis_out.csv h2020_topics_out.csv
          timestamp=$(date -u)
          git commit -m "data(h2020): ${timestamp}" || exit 0
          git push
      - name: Load
        # - upload to neo4j aura db
        uses: cbastn/cypher-shell-docker@v1
        with:
          address: ${{ secrets.NEO4J_URI }}
          username: ${{ secrets.NEO4J_USER }}
          password: ${{ secrets.NEO4J_PASSWORD }}
          file: "h2020_import.cypher"
